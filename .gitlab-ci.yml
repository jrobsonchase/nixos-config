image: nixpkgs/nix-flakes:latest

stages:
  - update
  - build
  - push

.ignored:
  - &before_script |
    nix --version
    eval "$(nix print-dev-env)"
    nix --version
    export NIX_CONFIG="max-jobs = auto"
    nix registry add private gitlab:jrobsonchase/nixos-config?dir=private-dummy
    mkdir -p /root/.ssh
    cat "$flake_deploy_key" > /root/.ssh/id_rsa
    chmod 0600 /root/.ssh/id_rsa
    echo "$GITLAB_KNOWN_HOST" >> /root/.ssh/known_hosts
    git config user.email "$GITLAB_USER_EMAIL"
    git config user.name "$GITLAB_USER_NAME"
    git reset --hard
    git remote set-url origin ssh://git@gitlab.com/jrobsonchase/nixos-config
    git fetch origin
    nix profile install .#cachix
    cachix use jrobsonchase

flake_update:
  stage: update
  rules:
    - if: '$FLAKE_UPDATE == "1" && $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
  before_script:
    - *before_script
  script:
    - git checkout main
    - nix flake update
    # Not sure why, but update seems to leave the lockfile partially updated.
    # Finish it up with a metadata command.
    - nix flake metadata
    - 'git commit -am "auto: Update flake inputs"'
    - 'git push --force origin HEAD:flake-update'

check:
  stage: build
  before_script:
    - *before_script
  script:
    - nix flake check
  rules:
    - if: '$FLAKE_UPDATE != "1"'

build_nixos:
  extends: check
  before_script:
    - *before_script
    - nix profile install .#nixos-rebuild
  script:
    - git checkout built
    - nixos-rebuild build --flake .#tarvos -L
    - git checkout -
    - cachix watch-exec jrobsonchase nixos-rebuild -- build --flake .#tarvos -L

build_home:
  extends: check
  script:
    - git checkout built
    - nix build .#homeConfigurations."josh@tarvos".activationPackage -L
    - git checkout -
    - cachix watch-exec jrobsonchase nix -- build .#homeConfigurations."josh@tarvos".activationPackage -L

push_built:
  stage: push
  before_script:
    - *before_script
  script:
    - git push -o ci.skip origin HEAD:built
  rules:
    - if: '$CI_COMMIT_REF_NAME != "built"'

push_main:
  stage: push
  before_script:
    - *before_script
  script:
    - git push -o ci.skip origin HEAD:main
  rules:
    - if: '$CI_COMMIT_REF_NAME == "flake-update"'
