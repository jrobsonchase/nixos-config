# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "ahci" "xhci_pci" "nvme" "usbhid" ];
  boot.initrd.kernelModules = [ "dm-snapshot" "amdgpu" ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  services.xserver.videoDrivers = [ "amdgpu" ];

  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/6c0f7637-f4df-410f-8e5d-ac22f323ba16";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    {
      device = "/dev/disk/by-uuid/BBA1-B06C";
      fsType = "vfat";
    };

  fileSystems."/mnt/windows" =
    {
      device = "/dev/disk/by-uuid/0AA80122A8010DBF";
      fsType = "ntfs-3g";
      options = [ "rw" "uid=1000" ];
    };

  swapDevices =
    [{ device = "/dev/disk/by-uuid/c3720fe2-eae2-4f44-9a6c-ef3fadf4d8ce"; }];

  boot.initrd.luks.devices = {
    cryptlvm = {
      device = "/dev/disk/by-uuid/860911ec-65d5-4f67-8cf7-bbe20ce1b717";
      preLVM = true;
    };
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp13s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp12s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
